; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".

[unix_http_server]
file=/home/cbe-master/realfast/soft/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/home/cbe-master/realfast/soft/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/home/cbe-master/realfast/soft/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///home/cbe-master/realfast/soft/supervisor.sock ; use a unix:// URL  for a unix socket

;;;;;;;;;;;;
; programs ;
;;;;;;;;;;;;
[program:redis]
command=/users/claw/code/redis-stable/src/redis-server /users/claw/code/realfast/conf/redis_cbe.conf
process=%(program_name)s
priority=1    ; set up db first
redirect_stderr=True

[program:queue]
command=queue_monitor -t -a -v
process=%(program_name)s
priority=2
redirect_stderr=True
stdout_logfile=/home/cbe-master/realfast/soft/realfast.log       ; stdout log path, NONE for none; default AUTO
stdout_events_enabled=true   ; emit events on stderr writes (default false)
buffer_size = 1024

[program:mcaf]
command=nice -n10 mcaf_monitor -v --listen --rtparams /home/cbe-master/realfast/workdir/rtpipe_cbe.conf
process=%(program_name)s
priority=3     ; watch for data last
redirect_stderr=True
stdout_logfile=/home/cbe-master/realfast/soft/realfast.log       ; stdout log path, NONE for none; default AUTO
stdout_events_enabled=true   ; emit events on stderr writes (default false)
buffer_size = 1024

[program:rqinfo]
command=rqinfo_monitor
process=%(program_name)s
priority=4
redirect_stderr=True
stdout_logfile=/home/cbe-master/realfast/soft/realfast.log       ; stdout log path, NONE for none; default AUTO
stdout_events_enabled=true   ; emit events on stderr writes (default false)
buffer_size = 1024

[program:work1]
command=ssh -t cbe-node-01 rq worker default -u redis://cbe-node-01
process=%(program_name)s
priority=5     ; start worker after db
redirect_stderr=True
autostart=False

[program:work2]
command=ssh -t cbe-node-02 rq worker default -u redis://cbe-node-01
process=%(program_name)s
priority=5     ; start worker after db
redirect_stderr=True
autostart=False

;;;;;;;;;;
; events ;
;;;;;;;;;;
[eventlistener:state_listener]
; takes some state changes and logs them
command=/home/cbe-master/realfast/.local/bin/listener.py -d log    
events=PROCESS_STATE_STARTING,PROCESS_STATE_STOPPING,PROCESS_STATE_FATAL
stderr_logfile=/home/cbe-master/realfast/soft/realfast_state.log    ; messages out are in stderr. stdout for internal communication.
buffer_size = 1024
;autostart=false                ; start at supervisord start (default: true)

[eventlistener:newscan_listener]
; takes mcaf stdout and logs those that contain 'datasetID=' (happens at scan arrival)
command=/home/cbe-master/realfast/.local/bin/listener.py -p mcaf -d log -s 'datasetID='
events=PROCESS_LOG_STDOUT
stderr_logfile=/home/cbe-master/realfast/soft/realfast_newscan.log   ; mcaf mode sends email atm
buffer_size = 1024
;autostart=false                ; start at supervisord start (default: true)

[eventlistener:plot_listener]
; takes queue stdout and emails those associated with end-of-scan plotting
command=/home/cbe-master/realfast/.local/bin/listener.py -p queue -d email -s 'Completed plotting'
events=PROCESS_LOG_STDOUT
buffer_size = 1024
;autostart=false                ; start at supervisord start (default: true)

[eventlistener:cand_listener]
; takes queue stdout and emails those associated with end-of-scan plotting
command=/home/cbe-master/realfast/.local/bin/listener.py -p work -d email -s 'Got one!'
events=PROCESS_LOG_STDOUT
buffer_size = 1024
;autostart=false                ; start at supervisord start (default: true)
